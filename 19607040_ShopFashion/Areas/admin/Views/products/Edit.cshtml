@using _19607040_ShopFashion.Help
@model _19607040_ShopFashion.Models.product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/admin/Views/Shared/_AdminLayout.cshtml";
}

<h2 class="text-center">Chỉnh sửa sản phẩm</h2>
@using (Html.BeginForm("Edit", "products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        <div class="container">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.Label("Tên sản phẩm", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.Label("Giá sản phẩm", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.Label("Vị trí", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.Label("Danh mục", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-12">
                            @*@Html.EditorFor(model => model.categoryid, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownListFor(model => model.categoryid, (SelectList)ViewBag.Category, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.categoryid, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.Label("Ngày cập nhật", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.datebegin, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.datebegin, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.Label("Mô tả", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @*@Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.TextAreaFor(model => model.description, new { htmlAttributes = new { @class = "form-control", @required = true } })
                            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.Label("Hình ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp" />
                        </div>
                        <div class="col-md-4">
                            <img src="~/Content/upload/img/product/@Model.img" width="200px" />
                        </div>
                        @*<div class="col-md-10">
                                @Html.EditorFor(model => model.img, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.img, "", new { @class = "text-danger" })
                            </div>*@
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label col-md-2 mr-2" })
                        @{
                            bool hide = true;
                        }
                        @Html.CheckBoxFor(model => hide)
                        @*<div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.hide)
                @Html.ValidationMessageFor(model => model.hide, "", new { @class = "text-danger" })
            </div>
        </div>*@
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @Html.NoEncodeActionLink("<span class='fas fa-backspace'></span> Trở lại", "Index", "Index", "products", routeValues: new { }, htmlAttributes: new { data_modal = "", @class = "btn btn-dark " })
                            <input type="submit" value="Lưu" class="btn btn-success" />
                        </div>
                    </div>
                </div>
               






                @*<div class="form-group">
                        @Html.LabelFor(model => model.img1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.img1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.img1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.img2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.img2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.img2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.img3, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.img3, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.img3, "", new { @class = "text-danger" })
                        </div>
                    </div>*@





                @*<div class="form-group">
                        @Html.LabelFor(model => model.size, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.size, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.size, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.color, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.color, "", new { @class = "text-danger" })
                        </div>
                    </div>*@









                
            </div>
        </div>
    </div>
}
@section _Footer
{
    <script src="~/Areas/admin/Content/ckfinder/ckfinder.js"></script>
    <script src="~/Areas/admin/Content/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        var editor = CKEDITOR.replace("description");
        var editor = CKEDITOR.replace("description", { height: '800px' });
        customConfig: '/Areas/admin/Content/ckeditor/config.js';
    </script>
    <script>
        $(function () {
            $("#name").keyup(function () {
                var text = $.trim($(this).val().toLowerCase());
                var text_create;
                text_create = text.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a").replace(/\ /g, '-').replace(/đ/g, "d").replace(/đ/g, "d").replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y").replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u").replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ.+/g, "o").replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ.+/g, "e").replace(/ì|í|ị|ỉ|ĩ/g, "i");
                $('#meta').val(text_create);
            }).keyup();
        });
    </script>
}
